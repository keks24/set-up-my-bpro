---
#############################################################################
# Copyright 2018 Ramon Fischer                                              #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#     http://www.apache.org/licenses/LICENSE-2.0                            #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################

- name: create group "{{ USERNAME }}"
  group:
    name: "{{ USERNAME }}"
    state: "present"
  when:
    - USERNAME != "root"
  tags:
    - create_user_and_group

- name: create user "{{ USERNAME }}" with 20 characters random password
  user:
    name: "{{ USERNAME }}"
    group: "{{ USERNAME }}"
    password: "{{ lookup('password', '/home/vagrant/credentials/password_unprivileged_user_{{ USERNAME }} chars=ascii_letters,digits,hexdigits,punctuation') | password_hash('sha512') }}"
    shell: "/bin/bash"
    home: "/home/{{ USERNAME }}/"
    update_password: "on_create"
    create_home: "yes"
    state: "present"
  when:
    - USERNAME != "root"
    - SUDO_USER == "no"
  tags:
    - create_user_and_group

- name: create user "{{ USERNAME }}" with 20 characters random password
  user:
    name: "{{ USERNAME }}"
    group: "{{ USERNAME }}"
    groups:
      - "adm"
      - "audio"
      - "dialout"
      - "netdev"
      - "plugdev"
      - "ssh"
      - "staff"
      - "sudo"
      - "systemd-journal"
      - "video"
    password: "{{ lookup('password', '/home/vagrant/credentials/password_privileged_user_{{ USERNAME }} chars=ascii_letters,digits,hexdigits,punctuation') | password_hash('sha512') }}"
    shell: "/bin/bash"
    home: "/home/{{ USERNAME }}/"
    update_password: "on_create"
    create_home: "yes"
    append: "yes"
    state: "present"
  when:
    - USERNAME != "root"
    - SUDO_USER == "yes"
  tags:
    - create_user_and_group

- name: prepare directory for authorised keys
  file:
    path: "/home/{{ USERNAME }}/{{ item.FILE_PATH }}"
    owner: "{{ USERNAME }}"
    group: "{{ USERNAME }}"
    mode: "{{ item.FILE_MODE }}"
    state: "{{ item.FILE_STATE }}"
  with_items:
    - { FILE_PATH: ".ssh/", FILE_MODE: "0700", FILE_STATE: "directory" }
    - { FILE_PATH: ".ssh/authorized_keys", FILE_MODE: "0600", FILE_STATE: "touch" }
  when:
    - USERNAME != "root"
  tags:
    - create_user_and_group

# create user "ansible" for future provisioning
- name: create user "{{ USERNAME }}" with 20 characters random password
  user:
    name: "{{ USERNAME }}"
    group: "{{ USERNAME }}"
    groups:
      - "sudo"
    password: "{{ lookup('password', '/home/vagrant/credentials/password_privileged_user_{{ USERNAME }} chars=ascii_letters,digits,hexdigits,punctuation') | password_hash('sha512') }}"
    shell: "/bin/bash"
    home: "/home/{{ USERNAME }}/"
    update_password: "on_create"
    create_home: "yes"
    append: "yes"
    state: "present"
  when:
    - USERNAME != "root"
    - USERNAME == "ansible"
  tags:
    - create_user_and_group

- name: set authorised key for user "{{ USERNAME }}"
  authorized_key:
    user: "{{ USERNAME }}"
    key: "{{ SSH_PUBLIC_KEY }}"
    exclusive: "yes"
    state: "present"
  when:
    - USERNAME != "root"
    - USERNAME == "ansible"
  tags:
    - pre_tasks
